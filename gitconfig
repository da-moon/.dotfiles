[core]
	autocrlf = false
	filemode = false
    symlinks = true
	pager    = cat
	# pager = ''
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[push]
	recursesubmodules = on-demand
[pull]
	rebase = true
[rebase]
	autostash = true
[status]
	submodulesummary = true
[commit]
	gpgsign = true
[interactive]
	difffilter = delta --color-only --features
[pager]
	diff = ([[ -x $(command -v delta) ]] && delta || less --tab=2 -RFX)
	grep = ([[ -x $(command -v delta) ]] && delta || less -RFX)
	blame = ([[ -x $(command -v delta) ]] && delta || less -RFX)
	log = ([[ -x $(command -v delta) ]] && delta || less -RFX)
	reflog = ([[ -x $(command -v delta) ]] && delta || less -RFX)
	show = ([[ -x $(command -v delta) ]] && delta || less -RFX)
[diff]
	submodule = log
	tool = difftastic
[diff "image"]
	command = compare $2 $1 png:- | montage -geometry +4+4 $2 - $1 png:- | display -title \"$1\"
[diff "difftastic"]
	command = difft
	binary = true
[difftool]
	prompt = false
[difftool "difftastic"]
	cmd = difft $LOCAL $REMOTE
[difftool "delta"]
	cmd = diff -u --unified=3 --ignore-case -w $LOCAL $REMOTE | delta
[delta]
	features = side-by-side line-numbers decorations
	whitespace-error-style = 22 reverse
[delta "decorations"]
	commit-decoration-style = bold yellow box ul
	file-style = bold yellow ul
	file-decoration-style = none
	commit-style = raw
	hunk-header-decoration-style = blue box
	hunk-header-file-style = red
	hunk-header-line-number-style = "#067a00"
	hunk-header-style = file line-number syntax
[delta "interactive"]
	keep-plus-minus-markers = false
[gui]
	editor = code -w
[fetch]
	prune = true
[merge]
	log = true
	tool = code
[mergetool "code"]
	cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[alias]
	diffp = difftool --tool=plain-diff
	a = add --renormalize
	view-contributors = shortlog -e -s -n
	upstream = remote get-url origin
	root = rev-parse --show-toplevel
	scope = rev-parse --show-prefix
	url = ls-remote --get-url
	aliases = config --get-regexp alias
	spush = push --recurse-submodules=on-demand
	sfetch = submodule foreach --recursive git fetch
	supdate = submodule update --remote --merge
	default-branch = rev-parse --abbrev-ref HEAD
	current-branch = !git for-each-ref --format=\"%(upstream:short)\" $(git symbolic-ref -q HEAD)
	branch-prune = "!git fetch -p && for b in $(git for-each-ref --format=\"%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)\" refs/heads); do git branch -d $b; done"
	ca = commit --signoff --gpg-sign --amend --reuse-message=HEAD
	c = commit --signoff --gpg-sign
	commit-summary = log --color --graph --pretty=format:\"%C(red)%h%C(reset) %s %C(bold blue)[%an](mailto:%ae)%C(reset) %C(green)%C(bold)%cr\" --abbrev-commit
	head-hash = rev-parse HEAD
	latest-commit = log -1 HEAD --stat
	untracked = ls-files --others --exclude-standard
	tracked = !git ls-tree -r $(git symbolic-ref --quiet --short HEAD || git rev-parse HEAD) --name-only
	tags = for-each-ref --format=\"%(refname:short) (%(committerdate:relative))\" --sort=committerdate refs/tags
	latest-tag = !git describe --tags $(git rev-list --tags --max-count=1 2>/dev/null) 2>/dev/null
	release-notes = log --color --pretty=format:\"* %C(red)%h%C(reset) %s %C(bold blue)[%an](mailto:%ae)%C(reset)\" --abbrev-commit --dense --no-merges
	staged = diff --name-only --staged
	difft = difftool --tool difftastic
	diffd = difftool --tool delta
	not-staged = diff-files --name-only -B -R -M
	all-changes = diff --name-only HEAD
	ui = "!f() { cd \"$(git rev-parse --show-toplevel)\" && gitui; }; f"
	zip = !git archive --format=zip --output=$(basename -s.git $(git remote get-url origin))-$(git describe --abbrev=0).zip $(git describe --abbrev=0)
	tar = !git archive --format=tar --output=$(basename -s.git $(git remote get-url origin))-$(git describe --abbrev=0).zip $(git describe --abbrev=0)
	conflicts = ! $EDITOR $(git diff --name-only --diff-filter=U)
	issues = ! gh issue list --assignee \"@me\"
	changes = diff-index --name-only -B -R -M -C HEAD
	rel-changes = ls-files -m -o --exclude-standard
	ignored = ls-files --others --ignored --exclude-standard
	fa = "!f() { cd \"$(git rev-parse --show-toplevel)\" && git ls-files -m -o --exclude-standard | fzf -0 --print0 --multi --reverse --height=40% --tabstop=2 --prompt=\" â”‚ \" --color=\"prompt:0,hl:178,hl+:178\" --preview-window=\"right:60%\" --height=\"80%\" --bind=\"tab:ignore\" --bind=\"shift-tab:ignore\" --bind=\"ctrl-t:ignore\" --bind=\"ctrl-g:ignore\" --bind=\"right:toggle+down\" --bind=\"left:toggle+up\" --bind=\"ctrl-space:select-all\" --bind=\"alt-space:deselect-all\" --preview=\"git difftool --tool=delta  {}\" | xargs -0 -t -o -I {} git add \"{}\";  }; f"
	next-minor-release = "!git describe --tags $(git rev-list --tags --max-count=1 2>/dev/null) 2>/dev/null| frawk -F. '{gsub(\"v\",\"\",$1);printf \"%s.%s.0\", $1,$2+1}END {if (NR==0){print \"0.0.1\"}}'"
	next-major-release = "!git describe --tags $(git rev-list --tags --max-count=1 2>/dev/null) 2>/dev/null| frawk -F. '{gsub(\"v\",\"\",$1);printf \"%s.0.0\", $1+1}END {if (NR==0){print \"0.0.1\"}}'"
	next-patch-release = "!git describe --tags $(git rev-list --tags --max-count=1 2>/dev/null) 2>/dev/null| frawk -F. '{gsub(\"v\",\"\",$1);printf \"%s.%s.%s\", $1,$2,$3+1}END {if (NR==0){print \"0.0.1\"}}'"
	commitgpt = "!git --no-pager diff --staged --ignore-all-space --diff-algorithm=minimal --unified=3 . | sc -c \"write conventional commit message  no longer that 100 characters for the following changes. scope of the commit is the most frequently seen directory path of changed files. every sentence in commit body should start in a new line and be a bullet point. commit body should be in markdown format\" > .git/COMMIT_EDITMSG; $EDITOR .git/COMMIT_EDITMSG"
    # Detailed file status with changes count
    file-stat = diff --stat
    
    # Files changed today
    today = log --name-only --since=midnight --pretty=format:
    
    # Files changed this week  
    week = log --name-only --since=1.week --pretty=format:
    
    # Show only filenames from status (cleaner output)
    status-names = status --porcelain --untracked-files=all
    
    # Count of changes per file
    change-count = diff --stat --name-only
    
    # Show what changed in last commit with file names
    last = show --name-only --oneline
    
    # List files in a commit (cleaner than show-files)
    commit-files = show --pretty=format: --name-only
    
	# All changed files (shows each category with headers)
    all-changed = "!git diff --name-only HEAD; git ls-files --others --exclude-standard"
    
    # Files changed in a specific commit (usage: git show-files <commit-hash>)
    show-files = diff-tree --no-commit-id --name-only -r
    
    # Files in last commit
    last-files = diff --name-only HEAD~1 HEAD
    
    # Short status with branch info
    st = status -sb
    
    # Show files with their status markers
    files = status --short
    
    # Modified files only (using diff-filter)
    modified = diff --name-only --diff-filter=M HEAD
    
    # Added files only
    added = diff --name-only --diff-filter=A HEAD
    
    # Deleted files only  
    deleted = diff --name-only --diff-filter=D HEAD
    
    # Files by type/extension (usage: git files-ext .js)
    files-ext = !git ls-files

[user]
	signingkey = 4F0BDB86C4684DDD
	name = da-moon
	email = contact@havi.dev
[gpg]
	program = /usr/local/bin/gpg-without-tty
[gpg "ssh"]
	allowedSignersFile = /home/damoon/.config/git/allowed_signers

[http]
	lowSpeedLimit = 1000
	lowSpeedTime = 10

[difftool "plain-diff"]
    cmd = diff -u --unified=3 $LOCAL $REMOTE
