#!/usr/bin/env bash

if command -- pmm -h >/dev/null 2>&1; then
  sudo pmm -Syyu --noconfirm
else
  if command -- pacman -h >/dev/null 2>&1; then
    sudo pacman -Syyu --noconfirm
    if command -- aura -h >/dev/null 2>&1; then
      sudo aura -Ayyuxac --noconfirm --skipinteg --skippgpcheck
    elif command -- paru -h >/dev/null 2>&1; then
      paru -Syyu --removemake --cleanafter --noconfirm
    fi
  fi
  if command -- apt-get -h >/dev/null 2>&1; then
    for i in {1..5}; do
      (
        sudo apt-get update \
        && sudo apt-get upgrade -y --allow-downgrades \
        && sudo apt-get autoremove -y --purge;
      ) && break \
      || sleep 15
    done
  fi
fi
# ─────────────────────────────────────────────────────────────────────
[ -n "$(which node 2>/dev/null)" ] && [ -r "$(which node 2>/dev/null)" ] && sudo chmod a+x "$(which node)"
[ -n "$(which yarn 2>/dev/null)" ] && [ -r "$(which yarn 2>/dev/null)" ] && sudo chmod a+x "$(which yarn)"
# ─────────────────────────────────────────────────────────────────────
if jq --version >/dev/null 2>&1 && "$(which node)" --version >/dev/null 2>&1 && "$(which yarn)" --version >/dev/null 2>&1; then
  if [ -r "$(sudo yarn global dir)/package.json" ]; then
    # [ NOTE ] return should never get called
    # i just added it to stop shellcheck from complaining
    pushd "$(sudo yarn global dir)" >/dev/null 2>&1 || return
    yarn outdated --json 2>/dev/null |
      jq -r '. | select (.type == "table").data.body[]|.[]' \
      | "/bin/grep" \
        -Pv '^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$' \
      | "/bin/grep" -Pv '^http(s)*:\/\/|^dependencies$' \
      | sudo xargs -r -I {} \
        yarn global add --latest --prefix "/usr/local" {}
    # [ NOTE ] exit should never get called
    # i just added it to stop shellcheck from complaining
    popd >/dev/null 2>&1 || return
  fi
fi
if command -- python3 -m pip -h >/dev/null 2>&1; then
  python3 -m pip list --user --outdated --format=freeze \
    | "/bin/grep" -v '^\-e' \
    | cut -d = -f 1 \
    | xargs -r -n1 \
      python3 -m pip install \
        --user \
        --upgrade \
        --quiet \
        --progress-bar ascii 2>/dev/null ;
fi
if command -- cargo -h >/dev/null 2>&1; then
  if ! command -- cargo-install-update -h >/dev/null 2>&1; then
    rustup run stable --install cargo install --all-features cargo-update
  fi
  if command -- cargo-install-update -h >/dev/null 2>&1; then
    rustup run --install stable cargo-install-update install-update --all \
    || rustup run --install nightly cargo-install-update install-update --all
  fi
fi
